{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aswin\\\\ai-and-ds\\\\agail\\\\New folder\\\\frontend\\\\src\\\\pages\\\\jobdetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport \"../styles/jobdetails.css\"; // Ensure styles are applied\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobDetails = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const selectedService = params.get(\"service\");\n  const selectedDate = params.get(\"date\");\n  const selectedTime = params.get(\"time\");\n  const navigate = useNavigate(); // For navigation\n  const [jobDescription, setJobDescription] = useState(\"\");\n  const [files, setFiles] = useState([]);\n  const [locationSelected, setLocationSelected] = useState(\"\");\n  const [coordinates, setCoordinates] = useState(null); // Store latitude & longitude\n\n  // Get user's current location\n  const handleSelectLocation = () => {\n    if (!navigator.geolocation) {\n      alert(\"Geolocation is not supported by your browser.\");\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setCoordinates({\n        latitude,\n        longitude\n      });\n      setLocationSelected(`Lat: ${latitude.toFixed(5)}, Lng: ${longitude.toFixed(5)}`);\n    }, error => {\n      alert(\"Failed to get location. Please enable location services.\");\n    });\n  };\n\n  // Handle File Upload\n  const handleFileChange = event => {\n    setFiles([...event.target.files]);\n  };\n\n  // Handle Form Submission (Post Job)\n  const handlePostJob = () => {\n    if (!coordinates || !jobDescription) {\n      alert(\"Please select your location and enter job details.\");\n      return;\n    }\n    const jobDetails = {\n      service: selectedService,\n      date: selectedDate,\n      time: selectedTime,\n      location: locationSelected,\n      description: jobDescription,\n      files,\n      coordinates\n    };\n\n    // Save job details to localStorage for now\n    let postedJobs = JSON.parse(localStorage.getItem(\"postedJobs\")) || [];\n    postedJobs.push(jobDetails);\n    localStorage.setItem(\"postedJobs\", JSON.stringify(postedJobs));\n    alert(`Job Posted Successfully`);\n\n    // Navigate to the home page after posting a job\n    navigate(\"/home\"); // Redirect to Home page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-details-wrapper\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-details-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Job Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Service: \", selectedService || \"Not Selected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Date: \", selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Time: \", selectedTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uD83D\\uDCCD Select Location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"location-btn\",\n        onClick: handleSelectLocation,\n        children: locationSelected ? \"Location Selected ✅\" : \"Choose Your Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), locationSelected && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"location-text\",\n        children: locationSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uD83D\\uDCDD Job Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Describe the job details...\",\n        value: jobDescription,\n        onChange: e => setJobDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uD83D\\uDCF7 Upload Photos/Videos:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        accept: \"image/*,video/*\",\n        onChange: handleFileChange,\n        className: \"file-upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-container\",\n        children: files.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [files.length, \" file(s) selected\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"post-job-btn\",\n        onClick: handlePostJob,\n        children: \"Post Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(JobDetails, \"1LtWkyh7tFjZ5FXlnpNu4VNa7IQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = JobDetails;\nexport default JobDetails;\nvar _c;\n$RefreshReg$(_c, \"JobDetails\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","JobDetails","_s","location","params","URLSearchParams","search","selectedService","get","selectedDate","selectedTime","navigate","jobDescription","setJobDescription","files","setFiles","locationSelected","setLocationSelected","coordinates","setCoordinates","handleSelectLocation","navigator","geolocation","alert","getCurrentPosition","position","latitude","longitude","coords","toFixed","error","handleFileChange","event","target","handlePostJob","jobDetails","service","date","time","description","postedJobs","JSON","parse","localStorage","getItem","push","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","value","onChange","e","type","multiple","accept","length","_c","$RefreshReg$"],"sources":["C:/Users/aswin/ai-and-ds/agail/New folder/frontend/src/pages/jobdetails.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport \"../styles/jobdetails.css\"; // Ensure styles are applied\r\n\r\nconst JobDetails = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const selectedService = params.get(\"service\");\r\n  const selectedDate = params.get(\"date\");\r\n  const selectedTime = params.get(\"time\");\r\n\r\n  const navigate = useNavigate(); // For navigation\r\n  const [jobDescription, setJobDescription] = useState(\"\");\r\n  const [files, setFiles] = useState([]);\r\n  const [locationSelected, setLocationSelected] = useState(\"\");\r\n  const [coordinates, setCoordinates] = useState(null); // Store latitude & longitude\r\n\r\n  // Get user's current location\r\n  const handleSelectLocation = () => {\r\n    if (!navigator.geolocation) {\r\n      alert(\"Geolocation is not supported by your browser.\");\r\n      return;\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setCoordinates({ latitude, longitude });\r\n        setLocationSelected(`Lat: ${latitude.toFixed(5)}, Lng: ${longitude.toFixed(5)}`);\r\n      },\r\n      (error) => {\r\n        alert(\"Failed to get location. Please enable location services.\");\r\n      }\r\n    );\r\n  };\r\n\r\n  // Handle File Upload\r\n  const handleFileChange = (event) => {\r\n    setFiles([...event.target.files]);\r\n  };\r\n\r\n  // Handle Form Submission (Post Job)\r\n  const handlePostJob = () => {\r\n    if (!coordinates || !jobDescription) {\r\n      alert(\"Please select your location and enter job details.\");\r\n      return;\r\n    }\r\n\r\n    const jobDetails = {\r\n      service: selectedService,\r\n      date: selectedDate,\r\n      time: selectedTime,\r\n      location: locationSelected,\r\n      description: jobDescription,\r\n      files,\r\n      coordinates,\r\n    };\r\n\r\n    // Save job details to localStorage for now\r\n    let postedJobs = JSON.parse(localStorage.getItem(\"postedJobs\")) || [];\r\n    postedJobs.push(jobDetails);\r\n    localStorage.setItem(\"postedJobs\", JSON.stringify(postedJobs));\r\n\r\n    alert(`Job Posted Successfully`);\r\n\r\n    // Navigate to the home page after posting a job\r\n    navigate(\"/home\"); // Redirect to Home page\r\n  };\r\n\r\n  return (\r\n    <div className=\"job-details-wrapper\"> {/* Wrapper to apply background */}\r\n      <div className=\"job-details-container\">\r\n        <h1>Job Details</h1>\r\n        <h2>Service: {selectedService || \"Not Selected\"}</h2>\r\n        <h3>Date: {selectedDate}</h3>\r\n        <h3>Time: {selectedTime}</h3>\r\n\r\n        {/* Location Selection */}\r\n        <label>📍 Select Location:</label>\r\n        <button className=\"location-btn\" onClick={handleSelectLocation}>\r\n          {locationSelected ? \"Location Selected ✅\" : \"Choose Your Location\"}\r\n        </button>\r\n        {locationSelected && <p className=\"location-text\">{locationSelected}</p>}\r\n\r\n        {/* Job Description */}\r\n        <label>📝 Job Description:</label>\r\n        <textarea \r\n          placeholder=\"Describe the job details...\" \r\n          value={jobDescription} \r\n          onChange={(e) => setJobDescription(e.target.value)}\r\n        />\r\n\r\n        {/* File Upload */}\r\n        <label>📷 Upload Photos/Videos:</label>\r\n        <input type=\"file\" multiple accept=\"image/*,video/*\" onChange={handleFileChange} className=\"file-upload\"/>\r\n\r\n        {/* Preview Uploaded Files */}\r\n        <div className=\"preview-container\">\r\n          {files.length > 0 && <p>{files.length} file(s) selected</p>}\r\n        </div>\r\n\r\n        {/* Post Job Button */}\r\n        <button className=\"post-job-btn\" onClick={handlePostJob}>\r\n          Post Job\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}