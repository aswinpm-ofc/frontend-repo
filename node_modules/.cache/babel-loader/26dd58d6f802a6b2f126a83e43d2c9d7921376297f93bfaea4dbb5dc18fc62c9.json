{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aswin\\\\ai-and-ds\\\\agail\\\\New folder\\\\frontend\\\\src\\\\pages\\\\scheduleappointment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"../styles/scheduleappointment.css\"; // Ensure CSS is imported\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScheduleAppointment = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const selectedService = params.get(\"service\");\n  const [date, setDate] = useState(new Date());\n  const [timeSlot, setTimeSlot] = useState(\"\");\n  const navigate = useNavigate(); // ✅ Initialize navigate\n\n  const handleProceed = () => {\n    if (!timeSlot) {\n      alert(\"Please select a time slot.\");\n      return;\n    }\n    navigate(`/jobdetails?service=${selectedService}&date=${date.toDateString()}&time=${timeSlot}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Schedule an Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Service: \", selectedService || \"Not selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: setDate,\n        value: date,\n        minDate: new Date() // ✅ This line prevents selecting past dates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-slots\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select a Time Slot:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), [\"10:00 AM\", \"12:00 PM\", \"2:00 PM\", \"4:00 PM\"].map(slot => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTimeSlot(slot),\n        children: slot\n      }, slot, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"proceed-btn\",\n      onClick: handleProceed,\n      disabled: !timeSlot,\n      children: \"Proceed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ScheduleAppointment, \"UGKqC3KHrsHeyv7fmrmbUsDwz8w=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ScheduleAppointment;\nexport default ScheduleAppointment;\nvar _c;\n$RefreshReg$(_c, \"ScheduleAppointment\");","map":{"version":3,"names":["React","useState","useLocation","Calendar","useNavigate","jsxDEV","_jsxDEV","ScheduleAppointment","_s","location","params","URLSearchParams","search","selectedService","get","date","setDate","Date","timeSlot","setTimeSlot","navigate","handleProceed","alert","toDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","minDate","map","slot","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/aswin/ai-and-ds/agail/New folder/frontend/src/pages/scheduleappointment.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"../styles/scheduleappointment.css\"; // Ensure CSS is imported\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\nconst ScheduleAppointment = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const selectedService = params.get(\"service\");\r\n\r\n  const [date, setDate] = useState(new Date());\r\n  const [timeSlot, setTimeSlot] = useState(\"\");\r\n\r\n  const navigate = useNavigate(); // ✅ Initialize navigate\r\n\r\nconst handleProceed = () => {\r\n  if (!timeSlot) {\r\n    alert(\"Please select a time slot.\");\r\n    return;\r\n  }\r\n  \r\n  navigate(`/jobdetails?service=${selectedService}&date=${date.toDateString()}&time=${timeSlot}`);\r\n};\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"schedule-container\">\r\n      <h1>Schedule an Appointment</h1>\r\n      <h2>Service: {selectedService || \"Not selected\"}</h2>\r\n\r\n      <div className=\"calendar-container\">\r\n  <Calendar \r\n    onChange={setDate} \r\n    value={date} \r\n    minDate={new Date()} // ✅ This line prevents selecting past dates\r\n  />\r\n</div>\r\n\r\n\r\n      <div className=\"time-slots\">\r\n        <h3>Select a Time Slot:</h3>\r\n        {[\"10:00 AM\", \"12:00 PM\", \"2:00 PM\", \"4:00 PM\"].map((slot) => (\r\n          <button key={slot} onClick={() => setTimeSlot(slot)}>\r\n            {slot}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <button className=\"proceed-btn\" onClick={handleProceed} disabled={!timeSlot}>\r\n        Proceed\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScheduleAppointment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}