{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aswin\\\\ai-and-ds\\\\agail\\\\New folder\\\\frontend\\\\src\\\\pages\\\\jobrequests.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Header from \"../components/layout/header\";\nimport Footer from \"../components/layout/footer\";\nimport \"../styles/pages/jobrequests.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JobRequests = () => {\n  _s();\n  const [requests, setRequests] = useState([{\n    id: 1,\n    name: \"John Doe\",\n    job: \"Plumbing\",\n    status: \"pending\"\n  }, {\n    id: 2,\n    name: \"Jane Smith\",\n    job: \"Electrical\",\n    status: \"pending\"\n  }]);\n  const handleDecision = id => {\n    // ❌ Instead of updating status, we remove the request\n    setRequests(prev => prev.filter(req => req.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-requests-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Job Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), requests.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\",\n          color: \"#555\"\n        },\n        children: \"No pending requests.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this) : requests.map(req => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-request-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: req.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Job Type: \", req.job]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-request-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"accept-btn\",\n            onClick: () => handleDecision(req.id),\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reject-btn\",\n            onClick: () => handleDecision(req.id),\n            children: \"Reject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this)]\n      }, req.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(JobRequests, \"KHjg4cY9F0uWSHY3a+ajPBqVm40=\");\n_c = JobRequests;\nexport default JobRequests;\nvar _c;\n$RefreshReg$(_c, \"JobRequests\");","map":{"version":3,"names":["React","useState","Header","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","JobRequests","_s","requests","setRequests","id","name","job","status","handleDecision","prev","filter","req","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","style","textAlign","color","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aswin/ai-and-ds/agail/New folder/frontend/src/pages/jobrequests.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"../components/layout/header\";\r\nimport Footer from \"../components/layout/footer\";\r\nimport \"../styles/pages/jobrequests.css\";\r\n\r\nconst JobRequests = () => {\r\n  const [requests, setRequests] = useState([\r\n    { id: 1, name: \"John Doe\", job: \"Plumbing\", status: \"pending\" },\r\n    { id: 2, name: \"Jane Smith\", job: \"Electrical\", status: \"pending\" },\r\n  ]);\r\n\r\n  const handleDecision = (id) => {\r\n    // ❌ Instead of updating status, we remove the request\r\n    setRequests((prev) => prev.filter((req) => req.id !== id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"job-requests-page\">\r\n        <h1>Job Requests</h1>\r\n        {requests.length === 0 ? (\r\n          <p style={{ textAlign: \"center\", color: \"#555\" }}>No pending requests.</p>\r\n        ) : (\r\n          requests.map((req) => (\r\n            <div className=\"job-request-card\" key={req.id}>\r\n              <h2>{req.name}</h2>\r\n              <p>Job Type: {req.job}</p>\r\n              <div className=\"job-request-actions\">\r\n                <button\r\n                  className=\"accept-btn\"\r\n                  onClick={() => handleDecision(req.id)}\r\n                >\r\n                  Accept\r\n                </button>\r\n                <button\r\n                  className=\"reject-btn\"\r\n                  onClick={() => handleDecision(req.id)}\r\n                >\r\n                  Reject\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobRequests;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}