{"ast":null,"code":"import React,{useState}from\"react\";import{useLocation,useNavigate}from\"react-router-dom\";import\"../styles/app.css\";// Ensure styles are applied\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const JobDetails=()=>{const location=useLocation();const params=new URLSearchParams(location.search);const selectedService=params.get(\"service\");const selectedDate=params.get(\"date\");const selectedTime=params.get(\"time\");const navigate=useNavigate();const[jobDescription,setJobDescription]=useState(\"\");const[files,setFiles]=useState([]);const[locationSelected,setLocationSelected]=useState(\"\");const[coordinates,setCoordinates]=useState(null);// Store latitude & longitude\n// Get user's current location\nconst handleSelectLocation=()=>{if(!navigator.geolocation){alert(\"Geolocation is not supported by your browser.\");return;}navigator.geolocation.getCurrentPosition(position=>{const{latitude,longitude}=position.coords;setCoordinates({latitude,longitude});setLocationSelected(`Lat: ${latitude.toFixed(5)}, Lng: ${longitude.toFixed(5)}`);},error=>{alert(\"Failed to get location. Please enable location services.\");});};// Handle File Upload\nconst handleFileChange=event=>{setFiles([...event.target.files]);};// Handle Form Submission\nconst handlePostJob=()=>{if(!coordinates||!jobDescription){alert(\"Please select your location and enter job details.\");return;}alert(`Job Posted Successfully for ${selectedService} on ${selectedDate} at ${selectedTime}\\nLocation: ${locationSelected}`);// After submission, navigate to a success page or home\nnavigate(\"/\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"job-details-wrapper\",children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"job-details-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Job Details\"}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Service: \",selectedService||\"Not Selected\"]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Date: \",selectedDate]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Time: \",selectedTime]}),/*#__PURE__*/_jsx(\"label\",{children:\"\\uD83D\\uDCCD Select Location:\"}),/*#__PURE__*/_jsx(\"button\",{className:\"location-btn\",onClick:handleSelectLocation,children:locationSelected?\"Location Selected ‚úÖ\":\"Choose Your Location\"}),locationSelected&&/*#__PURE__*/_jsx(\"p\",{className:\"location-text\",children:locationSelected}),/*#__PURE__*/_jsx(\"label\",{children:\"\\uD83D\\uDCDD Job Description:\"}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Describe the job details...\",value:jobDescription,onChange:e=>setJobDescription(e.target.value)}),/*#__PURE__*/_jsx(\"label\",{children:\"\\uD83D\\uDCF7 Upload Photos/Videos:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",multiple:true,accept:\"image/*,video/*\",onChange:handleFileChange,className:\"file-upload\"}),/*#__PURE__*/_jsx(\"div\",{className:\"preview-container\",children:files.length>0&&/*#__PURE__*/_jsxs(\"p\",{children:[files.length,\" file(s) selected\"]})}),/*#__PURE__*/_jsx(\"button\",{className:\"post-job-btn\",onClick:handlePostJob,children:\"Post Job\"})]})]});};export default JobDetails;","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsx","_jsx","jsxs","_jsxs","JobDetails","location","params","URLSearchParams","search","selectedService","get","selectedDate","selectedTime","navigate","jobDescription","setJobDescription","files","setFiles","locationSelected","setLocationSelected","coordinates","setCoordinates","handleSelectLocation","navigator","geolocation","alert","getCurrentPosition","position","latitude","longitude","coords","toFixed","error","handleFileChange","event","target","handlePostJob","className","children","onClick","placeholder","value","onChange","e","type","multiple","accept","length"],"sources":["C:/Users/aswin/Desktop/New folder (2)/jobeasy-app/frontend/src/pages/jobdetails.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport \"../styles/app.css\"; // Ensure styles are applied\r\n\r\nconst JobDetails = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const selectedService = params.get(\"service\");\r\n  const selectedDate = params.get(\"date\");\r\n  const selectedTime = params.get(\"time\");\r\n\r\n  const navigate = useNavigate();\r\n  const [jobDescription, setJobDescription] = useState(\"\");\r\n  const [files, setFiles] = useState([]);\r\n  const [locationSelected, setLocationSelected] = useState(\"\");\r\n  const [coordinates, setCoordinates] = useState(null); // Store latitude & longitude\r\n\r\n  // Get user's current location\r\n  const handleSelectLocation = () => {\r\n    if (!navigator.geolocation) {\r\n      alert(\"Geolocation is not supported by your browser.\");\r\n      return;\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setCoordinates({ latitude, longitude });\r\n        setLocationSelected(`Lat: ${latitude.toFixed(5)}, Lng: ${longitude.toFixed(5)}`);\r\n      },\r\n      (error) => {\r\n        alert(\"Failed to get location. Please enable location services.\");\r\n      }\r\n    );\r\n  };\r\n\r\n  // Handle File Upload\r\n  const handleFileChange = (event) => {\r\n    setFiles([...event.target.files]);\r\n  };\r\n\r\n  // Handle Form Submission\r\n  const handlePostJob = () => {\r\n    if (!coordinates || !jobDescription) {\r\n      alert(\"Please select your location and enter job details.\");\r\n      return;\r\n    }\r\n\r\n    alert(`Job Posted Successfully for ${selectedService} on ${selectedDate} at ${selectedTime}\\nLocation: ${locationSelected}`);\r\n    \r\n    // After submission, navigate to a success page or home\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"job-details-wrapper\"> {/* Wrapper to apply background */}\r\n      <div className=\"job-details-container\">\r\n        <h1>Job Details</h1>\r\n        <h2>Service: {selectedService || \"Not Selected\"}</h2>\r\n        <h3>Date: {selectedDate}</h3>\r\n        <h3>Time: {selectedTime}</h3>\r\n  \r\n        {/* Location Selection */}\r\n        <label>üìç Select Location:</label>\r\n        <button className=\"location-btn\" onClick={handleSelectLocation}>\r\n          {locationSelected ? \"Location Selected ‚úÖ\" : \"Choose Your Location\"}\r\n        </button>\r\n        {locationSelected && <p className=\"location-text\">{locationSelected}</p>}\r\n  \r\n        {/* Job Description */}\r\n        <label>üìù Job Description:</label>\r\n        <textarea \r\n          placeholder=\"Describe the job details...\" \r\n          value={jobDescription} \r\n          onChange={(e) => setJobDescription(e.target.value)}\r\n        />\r\n  \r\n        {/* File Upload */}\r\n        <label>üì∑ Upload Photos/Videos:</label>\r\n        <input type=\"file\" multiple accept=\"image/*,video/*\" onChange={handleFileChange} className=\"file-upload\"/>\r\n  \r\n        {/* Preview Uploaded Files */}\r\n        <div className=\"preview-container\">\r\n          {files.length > 0 && <p>{files.length} file(s) selected</p>}\r\n        </div>\r\n  \r\n        {/* Post Job Button */}\r\n        <button className=\"post-job-btn\" onClick={handlePostJob}>\r\n          Post Job\r\n        </button>\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default JobDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}