{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aswin\\\\ai-and-ds\\\\agail\\\\New folder\\\\frontend\\\\src\\\\pages\\\\jobrequests.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // Import useHistory for navigation\nimport Header from \"../components/layout/header\";\nimport Footer from \"../components/layout/footer\";\nimport \"../styles/pages/jobrequests.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JobRequests = () => {\n  _s();\n  const [requests, setRequests] = useState([]);\n  const [userLocation, setUserLocation] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory(); // useHistory hook for navigating to job details page\n\n  // Get the user's current location using Geolocation API\n  useEffect(() => {\n    if (!navigator.geolocation) {\n      alert(\"Geolocation is not supported by your browser.\");\n      setLoading(false);\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setUserLocation({\n        latitude,\n        longitude\n      });\n    }, error => {\n      alert(\"Failed to get location. Please enable location services.\");\n      setLoading(false);\n    });\n  }, []);\n\n  // Fetch job requests when user location is available\n  useEffect(() => {\n    if (userLocation) {\n      fetch(`/api/job-requests?lat=${userLocation.latitude}&lng=${userLocation.longitude}`).then(response => response.json()).then(data => {\n        setRequests(data); // Set the filtered requests from backend\n        setLoading(false);\n      }).catch(error => {\n        console.error(\"Error fetching job requests:\", error);\n        setLoading(false);\n      });\n    }\n  }, [userLocation]);\n  const handleDecision = id => {\n    // ❌ Instead of updating status, we remove the request\n    setRequests(prev => prev.filter(req => req.id !== id));\n  };\n  const handleViewDetails = id => {\n    // Navigate to the job details page\n    history.push(`/job-details/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-requests-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Job Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\",\n          color: \"#555\"\n        },\n        children: \"Loading job requests...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : requests.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\",\n          color: \"#555\"\n        },\n        children: \"No pending requests within 20 km.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : requests.map(req => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-request-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: req.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Job Type: \", req.job]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-request-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"accept-btn\",\n            onClick: () => handleDecision(req.id),\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reject-btn\",\n            onClick: () => handleDecision(req.id),\n            children: \"Reject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"view-details-btn\",\n            onClick: () => handleViewDetails(req.id),\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, req.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(JobRequests, \"o8rhVq5nebcSWbsg9iMQP0PMPPE=\", false, function () {\n  return [useHistory];\n});\n_c = JobRequests;\nexport default JobRequests;\nvar _c;\n$RefreshReg$(_c, \"JobRequests\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","Header","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","JobRequests","_s","requests","setRequests","userLocation","setUserLocation","loading","setLoading","history","navigator","geolocation","alert","getCurrentPosition","position","latitude","longitude","coords","error","fetch","then","response","json","data","catch","console","handleDecision","id","prev","filter","req","handleViewDetails","push","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","textAlign","color","length","map","name","job","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aswin/ai-and-ds/agail/New folder/frontend/src/pages/jobrequests.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\"; // Import useHistory for navigation\r\nimport Header from \"../components/layout/header\";\r\nimport Footer from \"../components/layout/footer\";\r\nimport \"../styles/pages/jobrequests.css\";\r\n\r\nconst JobRequests = () => {\r\n  const [requests, setRequests] = useState([]);\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const history = useHistory(); // useHistory hook for navigating to job details page\r\n\r\n  // Get the user's current location using Geolocation API\r\n  useEffect(() => {\r\n    if (!navigator.geolocation) {\r\n      alert(\"Geolocation is not supported by your browser.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setUserLocation({ latitude, longitude });\r\n      },\r\n      (error) => {\r\n        alert(\"Failed to get location. Please enable location services.\");\r\n        setLoading(false);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  // Fetch job requests when user location is available\r\n  useEffect(() => {\r\n    if (userLocation) {\r\n      fetch(`/api/job-requests?lat=${userLocation.latitude}&lng=${userLocation.longitude}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setRequests(data); // Set the filtered requests from backend\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching job requests:\", error);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [userLocation]);\r\n\r\n  const handleDecision = (id) => {\r\n    // ❌ Instead of updating status, we remove the request\r\n    setRequests((prev) => prev.filter((req) => req.id !== id));\r\n  };\r\n\r\n  const handleViewDetails = (id) => {\r\n    // Navigate to the job details page\r\n    history.push(`/job-details/${id}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"job-requests-page\">\r\n        <h1>Job Requests</h1>\r\n        {loading ? (\r\n          <p style={{ textAlign: \"center\", color: \"#555\" }}>Loading job requests...</p>\r\n        ) : requests.length === 0 ? (\r\n          <p style={{ textAlign: \"center\", color: \"#555\" }}>No pending requests within 20 km.</p>\r\n        ) : (\r\n          requests.map((req) => (\r\n            <div className=\"job-request-card\" key={req.id}>\r\n              <h2>{req.name}</h2>\r\n              <p>Job Type: {req.job}</p>\r\n              <div className=\"job-request-actions\">\r\n                <button\r\n                  className=\"accept-btn\"\r\n                  onClick={() => handleDecision(req.id)}\r\n                >\r\n                  Accept\r\n                </button>\r\n                <button\r\n                  className=\"reject-btn\"\r\n                  onClick={() => handleDecision(req.id)}\r\n                >\r\n                  Reject\r\n                </button>\r\n                <button\r\n                  className=\"view-details-btn\"\r\n                  onClick={() => handleViewDetails(req.id)}\r\n                >\r\n                  View Details\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobRequests;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}