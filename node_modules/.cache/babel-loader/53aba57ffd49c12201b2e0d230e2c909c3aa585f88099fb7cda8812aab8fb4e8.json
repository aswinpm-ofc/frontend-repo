{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aswin\\\\ai-and-ds\\\\agail\\\\New folder\\\\frontend\\\\src\\\\pages\\\\jobrequests.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/jobrequests.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobRequests = () => {\n  _s();\n  const [requests, setRequests] = useState([]);\n  const [userLocation, setUserLocation] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate(); // useNavigate hook for navigating to job details page\n\n  const mockRequests = [{\n    id: 1,\n    name: \"Plumbing Job\",\n    job: \"Plumbing\",\n    description: \"Fix a leaking pipe\",\n    location: \"Location 1\"\n  }, {\n    id: 2,\n    name: \"Electrical Job\",\n    job: \"Electrical\",\n    description: \"Install new lighting\",\n    location: \"Location 2\"\n  }];\n  useEffect(() => {\n    if (!navigator.geolocation) {\n      alert(\"Geolocation is not supported by your browser.\");\n      setLoading(false);\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setUserLocation({\n        latitude,\n        longitude\n      });\n    }, error => {\n      alert(\"Failed to get location. Please enable location services.\");\n      setLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    if (userLocation) {\n      const filteredRequests = mockRequests.filter(req => Math.random() < 0.5);\n      setRequests(filteredRequests);\n      setLoading(false);\n    }\n  }, [userLocation]);\n  const handleDecision = (id, action) => {\n    if (action === \"accept\") {\n      const acceptedJob = requests.find(req => req.id === id);\n      localStorage.setItem(\"acceptedJob\", JSON.stringify(acceptedJob));\n      navigate(\"/workerdashboard\");\n    } else {\n      setRequests(prev => prev.filter(req => req.id !== id));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-requests-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Job Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading job requests...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : requests.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No job requests found within your location.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : requests.map(req => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-request-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: req.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: req.job\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: req.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-request-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDecision(req.id, \"accept\"),\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDecision(req.id, \"reject\"),\n          children: \"Reject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(`/job/${req.id}`),\n          children: \"View Job Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, req.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(JobRequests, \"FuSBA/0b3rOpx8R3MXQm9iiOcUQ=\", false, function () {\n  return [useNavigate];\n});\n_c = JobRequests;\nexport default JobRequests;\nvar _c;\n$RefreshReg$(_c, \"JobRequests\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","JobRequests","_s","requests","setRequests","userLocation","setUserLocation","loading","setLoading","navigate","mockRequests","id","name","job","description","location","navigator","geolocation","alert","getCurrentPosition","position","latitude","longitude","coords","error","filteredRequests","filter","req","Math","random","handleDecision","action","acceptedJob","find","localStorage","setItem","JSON","stringify","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aswin/ai-and-ds/agail/New folder/frontend/src/pages/jobrequests.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/jobrequests.css\";\r\n\r\nconst JobRequests = () => {\r\n  const [requests, setRequests] = useState([]);\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate(); // useNavigate hook for navigating to job details page\r\n\r\n  const mockRequests = [\r\n    { id: 1, name: \"Plumbing Job\", job: \"Plumbing\", description: \"Fix a leaking pipe\", location: \"Location 1\" },\r\n    { id: 2, name: \"Electrical Job\", job: \"Electrical\", description: \"Install new lighting\", location: \"Location 2\" }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (!navigator.geolocation) {\r\n      alert(\"Geolocation is not supported by your browser.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setUserLocation({ latitude, longitude });\r\n      },\r\n      (error) => {\r\n        alert(\"Failed to get location. Please enable location services.\");\r\n        setLoading(false);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userLocation) {\r\n      const filteredRequests = mockRequests.filter((req) => Math.random() < 0.5);\r\n      setRequests(filteredRequests);\r\n      setLoading(false);\r\n    }\r\n  }, [userLocation]);\r\n\r\n  const handleDecision = (id, action) => {\r\n    if (action === \"accept\") {\r\n      const acceptedJob = requests.find((req) => req.id === id);\r\n      localStorage.setItem(\"acceptedJob\", JSON.stringify(acceptedJob)); \r\n      navigate(\"/workerdashboard\");\r\n    } else {\r\n      setRequests((prev) => prev.filter((req) => req.id !== id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"job-requests-page\">\r\n      <h1>Job Requests</h1>\r\n      {loading ? (\r\n        <p>Loading job requests...</p>\r\n      ) : requests.length === 0 ? (\r\n        <p>No job requests found within your location.</p>\r\n      ) : (\r\n        requests.map((req) => (\r\n          <div className=\"job-request-card\" key={req.id}>\r\n            <h2>{req.name}</h2>\r\n            <p>{req.job}</p>\r\n            <p>{req.description}</p>\r\n            <div className=\"job-request-actions\">\r\n              <button onClick={() => handleDecision(req.id, \"accept\")}>Accept</button>\r\n              <button onClick={() => handleDecision(req.id, \"reject\")}>Reject</button>\r\n              <button onClick={() => navigate(`/job/${req.id}`)}>View Job Details</button>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobRequests;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}