{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aswin\\\\ai-and-ds\\\\agail\\\\New folder\\\\frontend\\\\src\\\\pages\\\\jobrequests.js\",\n  _s = $RefreshSig$();\n// src/pages/jobrequests.js\nimport React, { useState } from \"react\";\nimport Header from \"../components/layout/header\";\nimport Footer from \"../components/layout/footer\";\nimport \"../styles/pages/jobrequests.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JobRequests = () => {\n  _s();\n  const [requests, setRequests] = useState([{\n    id: 1,\n    name: \"John Doe\",\n    job: \"Plumbing\",\n    status: \"pending\"\n  }, {\n    id: 2,\n    name: \"Jane Smith\",\n    job: \"Electrical\",\n    status: \"pending\"\n  }]);\n  const handleDecision = (id, decision) => {\n    setRequests(prev => prev.map(req => req.id === id ? {\n      ...req,\n      status: decision\n    } : req));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-requests-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Job Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"requests-list\",\n        children: requests.map(req => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"request-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: req.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Job Type: \", req.job]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", req.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), req.status === \"pending\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"accept-btn\",\n              onClick: () => handleDecision(req.id, \"accepted\"),\n              children: \"Accept\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reject-btn\",\n              onClick: () => handleDecision(req.id, \"rejected\"),\n              children: \"Reject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)]\n        }, req.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(JobRequests, \"KHjg4cY9F0uWSHY3a+ajPBqVm40=\");\n_c = JobRequests;\nexport default JobRequests;\nvar _c;\n$RefreshReg$(_c, \"JobRequests\");","map":{"version":3,"names":["React","useState","Header","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","JobRequests","_s","requests","setRequests","id","name","job","status","handleDecision","decision","prev","map","req","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aswin/ai-and-ds/agail/New folder/frontend/src/pages/jobrequests.js"],"sourcesContent":["// src/pages/jobrequests.js\r\nimport React, { useState } from \"react\";\r\nimport Header from \"../components/layout/header\";\r\nimport Footer from \"../components/layout/footer\";\r\nimport \"../styles/pages/jobrequests.css\";\r\n\r\nconst JobRequests = () => {\r\n  const [requests, setRequests] = useState([\r\n    { id: 1, name: \"John Doe\", job: \"Plumbing\", status: \"pending\" },\r\n    { id: 2, name: \"Jane Smith\", job: \"Electrical\", status: \"pending\" },\r\n  ]);\r\n\r\n  const handleDecision = (id, decision) => {\r\n    setRequests((prev) =>\r\n      prev.map((req) =>\r\n        req.id === id ? { ...req, status: decision } : req\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"job-requests-container\">\r\n        <h1>Job Requests</h1>\r\n        <div className=\"requests-list\">\r\n          {requests.map((req) => (\r\n            <div className=\"request-card\" key={req.id}>\r\n              <h3>{req.name}</h3>\r\n              <p>Job Type: {req.job}</p>\r\n              <p>Status: {req.status}</p>\r\n              {req.status === \"pending\" && (\r\n                <div className=\"actions\">\r\n                  <button\r\n                    className=\"accept-btn\"\r\n                    onClick={() => handleDecision(req.id, \"accepted\")}\r\n                  >\r\n                    Accept\r\n                  </button>\r\n                  <button\r\n                    className=\"reject-btn\"\r\n                    onClick={() => handleDecision(req.id, \"rejected\")}\r\n                  >\r\n                    Reject\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobRequests;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}