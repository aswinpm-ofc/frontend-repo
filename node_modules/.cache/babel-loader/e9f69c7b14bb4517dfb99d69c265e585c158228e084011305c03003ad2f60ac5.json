{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aswin\\\\ai-and-ds\\\\agail\\\\New folder\\\\frontend\\\\src\\\\pages\\\\jobrequests.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Use useNavigate instead of useHistory\nimport Header from \"../components/layout/header\";\nimport Footer from \"../components/layout/footer\";\nimport \"../styles/jobrequests.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JobRequests = () => {\n  _s();\n  const [requests, setRequests] = useState([]);\n  const [userLocation, setUserLocation] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate(); // useNavigate hook for navigating to job details page\n\n  // Get the user's current location using Geolocation API\n  useEffect(() => {\n    if (!navigator.geolocation) {\n      alert(\"Geolocation is not supported by your browser.\");\n      setLoading(false);\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setUserLocation({\n        latitude,\n        longitude\n      });\n    }, error => {\n      alert(\"Failed to get location. Please enable location services.\");\n      setLoading(false);\n    });\n  }, []);\n\n  // Fetch job requests when user location is available\n  useEffect(() => {\n    if (userLocation) {\n      fetch(`/api/job-requests?lat=${userLocation.latitude}&lng=${userLocation.longitude}`).then(response => response.json()).then(data => {\n        setRequests(data); // Set the filtered requests from backend\n        setLoading(false);\n      }).catch(error => {\n        console.error(\"Error fetching job requests:\", error);\n        setLoading(false);\n      });\n    }\n  }, [userLocation]);\n  const handleDecision = (id, action) => {\n    if (action === \"accept\") {\n      const acceptedJob = requests.find(req => req.id === id);\n      setRequests(prev => prev.filter(req => req.id !== id)); // Remove from requests\n\n      // Save accepted job to local storage\n      localStorage.setItem(\"acceptedJob\", JSON.stringify(acceptedJob));\n      navigate(\"/workerdashboard\"); // Redirect to Worker Dashboard\n    } else {\n      setRequests(prev => prev.filter(req => req.id !== id)); // Reject job\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-requests-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Job Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\",\n          color: \"#555\"\n        },\n        children: \"Loading job requests...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this) : requests.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\",\n          color: \"#555\"\n        },\n        children: \"No pending requests within 20 km.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this) : requests.map(req => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-request-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: req.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Job Type: \", req.job]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-request-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"accept-btn\",\n            onClick: () => handleDecision(req.id, \"accept\"),\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reject-btn\",\n            onClick: () => handleDecision(req.id, \"reject\"),\n            children: \"Reject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"view-details-btn\",\n            onClick: () => navigate(`/job-details/${req.id}`),\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, req.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(JobRequests, \"FuSBA/0b3rOpx8R3MXQm9iiOcUQ=\", false, function () {\n  return [useNavigate];\n});\n_c = JobRequests;\nexport default JobRequests;\nvar _c;\n$RefreshReg$(_c, \"JobRequests\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Header","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","JobRequests","_s","requests","setRequests","userLocation","setUserLocation","loading","setLoading","navigate","navigator","geolocation","alert","getCurrentPosition","position","latitude","longitude","coords","error","fetch","then","response","json","data","catch","console","handleDecision","id","action","acceptedJob","find","req","prev","filter","localStorage","setItem","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","textAlign","color","length","map","name","job","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aswin/ai-and-ds/agail/New folder/frontend/src/pages/jobrequests.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; // Use useNavigate instead of useHistory\r\nimport Header from \"../components/layout/header\";\r\nimport Footer from \"../components/layout/footer\";\r\nimport \"../styles/jobrequests.css\";\r\n\r\nconst JobRequests = () => {\r\n  const [requests, setRequests] = useState([]);\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate(); // useNavigate hook for navigating to job details page\r\n\r\n  // Get the user's current location using Geolocation API\r\n  useEffect(() => {\r\n    if (!navigator.geolocation) {\r\n      alert(\"Geolocation is not supported by your browser.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setUserLocation({ latitude, longitude });\r\n      },\r\n      (error) => {\r\n        alert(\"Failed to get location. Please enable location services.\");\r\n        setLoading(false);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  // Fetch job requests when user location is available\r\n  useEffect(() => {\r\n    if (userLocation) {\r\n      fetch(`/api/job-requests?lat=${userLocation.latitude}&lng=${userLocation.longitude}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setRequests(data); // Set the filtered requests from backend\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching job requests:\", error);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [userLocation]);\r\n\r\n  const handleDecision = (id, action) => {\r\n    if (action === \"accept\") {\r\n      const acceptedJob = requests.find((req) => req.id === id);\r\n      setRequests((prev) => prev.filter((req) => req.id !== id)); // Remove from requests\r\n\r\n      // Save accepted job to local storage\r\n      localStorage.setItem(\"acceptedJob\", JSON.stringify(acceptedJob));\r\n      navigate(\"/workerdashboard\"); // Redirect to Worker Dashboard\r\n    } else {\r\n      setRequests((prev) => prev.filter((req) => req.id !== id)); // Reject job\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"job-requests-page\">\r\n        <h1>Job Requests</h1>\r\n        {loading ? (\r\n          <p style={{ textAlign: \"center\", color: \"#555\" }}>Loading job requests...</p>\r\n        ) : requests.length === 0 ? (\r\n          <p style={{ textAlign: \"center\", color: \"#555\" }}>No pending requests within 20 km.</p>\r\n        ) : (\r\n          requests.map((req) => (\r\n            <div className=\"job-request-card\" key={req.id}>\r\n              <h2>{req.name}</h2>\r\n              <p>Job Type: {req.job}</p>\r\n              <div className=\"job-request-actions\">\r\n                <button\r\n                  className=\"accept-btn\"\r\n                  onClick={() => handleDecision(req.id, \"accept\")}\r\n                >\r\n                  Accept\r\n                </button>\r\n                <button\r\n                  className=\"reject-btn\"\r\n                  onClick={() => handleDecision(req.id, \"reject\")}\r\n                >\r\n                  Reject\r\n                </button>\r\n                <button\r\n                  className=\"view-details-btn\"\r\n                  onClick={() => navigate(`/job-details/${req.id}`)}\r\n                >\r\n                  View Details\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobRequests;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}